name: ci

on:
  push:
    branches:
      - "development"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
     
      - name: Bump version and push the tag
        id: tag_action
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          INITIAL_VERSION: 1.0.0
          WITH_V: false
          DEFAULT_BUMP: patch
          DRY_RUN: false

      - name: Set tag version as environment var
        run: echo "TAG_VERSION=${{ steps.bump_version.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Update version in pom.xml
        run: |
          mvn versions:set -DnewVersion=${{ steps.tag_action.outputs.new_tag }}
          git config --global user.name "action@github.com"
          git config --global user.email "GitHub Action"
          git commit -a -m "Update version in pom.xml"
          git config pull.rebase false
          git push

      - name: Validate and Test with Maven
        run: mvn -B package --file pom.xml

      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: tamarshnirer
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build
        run: 
          sudo docker build -t tamarshnirer/helloworld .
        
      - 
       name: Run Docker container
       run: |
         sudo docker run -d --name helloworld tamarshnirer/helloworld
         sleep 5  
         docker ps 
         docker logs helloworld || true 
         docker stop helloworld || true
         
      - 
        name: Login to Docker hub
        env:
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: |
          sudo docker login -u tamarshnirer -p "$DOCKER_PASSWORD" 
      -
        name: Push to Dockerhub
        run: sudo docker push tamarshnirer/helloworld
      - name: Create PR to master branch
        if: success()
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: "master"
          pr_title: "CI updates"
          pr_body: "Updates from CI to deploy"
          github_token: ${{ secrets.GITHUB_TOKEN }}
